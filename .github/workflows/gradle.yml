name: CI/CD with Docker & CodeDeploy

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (선택) 컨테이너 밖에서 미리 빌드할 필요 없으면 이 단계 생략 가능
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 테스트는 필요 시 활성화
      - name: Gradle build (optional)
        run: ./gradlew clean build -x test

      # ── 배포 번들 구성 ───────────────────────────────
      # CodeDeploy는 zip 최상단에 appspec.yml 이 있어야 함
      # EC2에서 Docker로 배포할 스크립트/파일 포함
      - name: Make deploy bundle
        run: |
          rm -rf deploy && mkdir -p deploy/scripts
          # Docker 관련 파일 포함(있는 것만 복사)
          [ -f Dockerfile ] && cp Dockerfile deploy/
          [ -f docker-compose.yml ] && cp docker-compose.yml deploy/
          # 앱 산출물(컨테이너에서 빌드한다면 생략 가능)
          if ls build/libs/*.jar >/dev/null 2>&1; then cp build/libs/*.jar deploy/app.jar; fi
          # CodeDeploy 필수 파일
          cp appspec.yml deploy/
          # 배포 스크립트(예: scripts/before_install.sh, after_install.sh, start_server.sh 등)
          if [ -d scripts ]; then cp -r scripts/* deploy/scripts/; fi
          cd deploy && zip -r ../bundle.zip . && cd -

      # ── AWS 자격 증명 ────────────────────────────────
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}   # 필요 시
          aws-region: ap-northeast-2

      # ── S3 업로드 ────────────────────────────────────
      - name: Upload to S3
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}  # 예: siso-deploy
          BUNDLE_KEY: bundle.zip
        run: aws s3 cp ./bundle.zip "s3://$S3_BUCKET_NAME/$BUNDLE_KEY"

      # ── CodeDeploy 트리거 ───────────────────────────
      - name: Create CodeDeploy deployment
        env:
          APPLICATION_NAME: siso
          DEPLOYMENT_GROUP_NAME: siso-group
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          BUNDLE_KEY: bundle.zip
        run: |
          aws deploy create-deployment \
            --application-name "$APPLICATION_NAME" \
            --deployment-group-name "$DEPLOYMENT_GROUP_NAME" \
            --file-exists-behavior OVERWRITE \
            --s3-location bucket="$S3_BUCKET_NAME",bundleType=zip,key="$BUNDLE_KEY" \
            --region ap-northeast-2
