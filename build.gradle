plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.siso'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

    // AWS SDK v2 BOM (버전은 예시)
    implementation platform("software.amazon.awssdk:bom:2.25.50")
    implementation("io.awspring.cloud:spring-cloud-aws-starter-s3:3.0.2")

    // S3 클라이언트
    implementation "software.amazon.awssdk:s3"

    // URLConnection 기반 HTTP 클라이언트 (현재 코드에서 사용)
    implementation "software.amazon.awssdk:url-connection-client"

	// 드라이버는 둘 다 runtimeOnly (스프링이 URL로 자동 선택)

    implementation 'org.mariadb.jdbc:mariadb-java-client:3.4.1' // 예시 버전

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Jakarta Validation 지원
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // Agora RTC Token 생성용 라이브러리
    implementation("io.agora:authentication:2.1.3")

	// jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// 오디오 파일
	implementation 'com.mpatric:mp3agic:0.9.1' // MP3 파일 메타데이터 추출용
	implementation 'org.gagravarr:vorbis-java-core:0.8' // OGG 파일 지원용
	implementation 'ws.schild:jave-all-deps:3.3.1' // 모든 오디오 형식 지원 (FFmpeg 기반)

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'



    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    
    // Firebase Admin SDK
    implementation 'com.google.firebase:firebase-admin:9.4.3'
}

tasks.named('test') {
	useJUnitPlatform()
}