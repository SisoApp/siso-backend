services:
  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max_connections=200
    environment:
      TZ: ${TZ:-Asia/Seoul}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u${MARIADB_USER} -p${MARIADB_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  app:
    # 서버에서 빌드할 때
    build: .
    # (레지스트리 쓰면 아래로 교체)
    # image: ghcr.io/<owner>/<image>:latest

    container_name: siso-app
    env_file: [.env]
    ports:
      - "8080:8080"

    depends_on:
      mariadb:
        condition: service_healthy

    environment:
      TZ: ${TZ:-Asia/Seoul}

      # Spring profiles / secret import
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      SPRING_CONFIG_IMPORT: ${SPRING_CONFIG_IMPORT:-optional:application-secret.yml}

      # DB 연결 (하드코딩 금지)
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/${MARIADB_DATABASE}?characterEncoding=utf8
      SPRING_DATASOURCE_USERNAME: ${MARIADB_USER}
      SPRING_DATASOURCE_PASSWORD: ${MARIADB_PASSWORD}
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MariaDBDialect

      # 운영 기본은 none, 최초 1회만 update로
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO:-none}

      # OAuth2 (필요 시 .env의 간단 키를 Spring 키로 매핑)
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_REDIRECT_URI: ${KAKAO_REDIRECT_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_AUTHORIZATION_GRANT_TYPE: authorization_code
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_AUTHENTICATION_METHOD: client_secret_post
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_SCOPE: profile_nickname,account_email
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_AUTHORIZATION_URI: https://kauth.kakao.com/oauth/authorize
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_TOKEN_URI: https://kauth.kakao.com/oauth/token
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_USER_INFO_URI: https://kapi.kakao.com/v2/user/me
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_USER_NAME_ATTRIBUTE: id

      # JWT
      JWT_SECRET: ${JWT_SECRET}

    # 앱이 완전히 뜬 뒤에만 healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8080/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 5s
      timeout: 2s
      retries: 30
      start_period: 20s

    # 그레이스풀 종료로 다운타임 최소화
    stop_grace_period: 20s
    restart: unless-stopped

volumes:
  dbdata: